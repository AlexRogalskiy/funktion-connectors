---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    funktion.fabric8.io/kind: Connector
  name: twitter
data:
  deployment.yml: |
    ---
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      labels:
        funktion.fabric8.io/kind: Subscription
        connector: twitter
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            funktion.fabric8.io/kind: Subscription
            connector: twitter
        spec:
          containers:
          - image: funktion/connector-twitter:${project.version}
            name: connector
  schema.yml: |
    ---
    component:
      kind: component
      scheme: twitter
      syntax: twitter:kind
      title: Twitter
      description: This component integrates with Twitter to send tweets or search for tweets and more.
      label: api,social
      deprecated: false
      async: false
      javaType: org.apache.camel.component.twitter.TwitterComponent
      groupId: org.apache.camel
      artifactId: camel-twitter
      version: 2.18.3
    componentProperties:
      accessToken:
        kind: property
        label: security
        required: false
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: true
        description: The access token
        order: 0
      accessTokenSecret:
        kind: property
        label: security
        required: false
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: true
        description: The access token secret
        order: 1
      consumerKey:
        kind: property
        label: security
        required: false
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: true
        description: The consumer key
        order: 2
      consumerSecret:
        kind: property
        label: security
        required: false
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: true
        description: The consumer secret
        order: 3
      httpProxyHost:
        kind: property
        label: proxy
        required: false
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The http proxy host which can be used for the camel-twitter.
        order: 4
      httpProxyUser:
        kind: property
        label: proxy
        required: false
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The http proxy user which can be used for the camel-twitter.
        order: 5
      httpProxyPassword:
        kind: property
        label: proxy
        required: false
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The http proxy password which can be used for the camel-twitter.
        order: 6
      httpProxyPort:
        kind: property
        label: proxy
        required: false
        type: integer
        javaType: int
        deprecated: false
        secret: false
        description: The http proxy port which can be used for the camel-twitter.
        order: 7
    properties:
      kind:
        kind: path
        group: common
        required: true
        type: string
        javaType: java.lang.String
        enum:
        - directmessage
        - search
        - streaming/filter
        - streaming/sample
        - streaming/user
        - timeline/home
        - timeline/mentions
        - timeline/retweetsofme
        - timeline/user
        deprecated: false
        secret: false
        description: What polling mode to use direct polling or event based. The event mode is only supported when the endpoint kind is event based.
        order: 0
      user:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Username used for user timeline consumption direct message production etc.
        order: 1
      bridgeErrorHandler:
        kind: parameter
        group: consumer
        label: consumer
        type: boolean
        javaType: boolean
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: false
        description: Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored.
        order: 2
      sendEmptyMessageWhenIdle:
        kind: parameter
        group: consumer
        label: consumer
        type: boolean
        javaType: boolean
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: false
        description: If the polling consumer did not poll any files you can enable this option to send an empty message (no body) instead.
        order: 3
      type:
        kind: parameter
        group: consumer
        label: consumer
        type: string
        javaType: org.apache.camel.component.twitter.data.EndpointType
        enum:
        - polling
        - direct
        - event
        deprecated: false
        secret: false
        defaultValue: direct
        description: Endpoint type to use. Only streaming supports event type.
        order: 4
      distanceMetric:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: string
        javaType: java.lang.String
        enum:
        - km
        - mi
        deprecated: false
        secret: false
        defaultValue: km
        description: 'Used by the non-stream geography search to search by radius using
          the configured metrics. The unit can either be mi for miles or km for kilometers.
          You need to configure all the following options: longitude latitude radius and
          distanceMetric.'
        order: 5
      exceptionHandler:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: object
        javaType: org.apache.camel.spi.ExceptionHandler
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        description: To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored.
        order: 6
      exchangePattern:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: string
        javaType: org.apache.camel.ExchangePattern
        enum:
        - InOnly
        - RobustInOnly
        - InOut
        - InOptionalOut
        - OutOnly
        - RobustOutOnly
        - OutIn
        - OutOptionalIn
        deprecated: false
        secret: false
        description: Sets the exchange pattern when the consumer creates an exchange.
        order: 7
      latitude:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: number
        javaType: java.lang.Double
        deprecated: false
        secret: false
        description: 'Used by the non-stream geography search to search by latitude. You
          need to configure all the following options: longitude latitude radius and distanceMetric.'
        order: 8
      locations:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Bounding boxes created by pairs of lat/lons. Can be used for streaming/filter. A pair is defined as latlon. And multiple paris can be separated by semi colon.
        order: 9
      longitude:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: number
        javaType: java.lang.Double
        deprecated: false
        secret: false
        description: 'Used by the non-stream geography search to search by longitude.
          You need to configure all the following options: longitude latitude radius and
          distanceMetric.'
        order: 10
      pollStrategy:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: object
        javaType: org.apache.camel.spi.PollingConsumerPollStrategy
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        description: A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.
        order: 11
      radius:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: number
        javaType: java.lang.Double
        deprecated: false
        secret: false
        description: 'Used by the non-stream geography search to search by radius. You
          need to configure all the following options: longitude latitude radius and distanceMetric.'
        order: 12
      twitterStream:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: object
        javaType: twitter4j.TwitterStream
        deprecated: false
        secret: false
        description: To use a custom instance of TwitterStream
        order: 13
      synchronous:
        kind: parameter
        group: advanced
        label: advanced
        type: boolean
        javaType: boolean
        deprecated: false
        secret: false
        defaultValue: false
        description: Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported).
        order: 14
      count:
        kind: parameter
        group: filter
        label: consumer,filter
        type: integer
        javaType: java.lang.Integer
        deprecated: false
        secret: false
        description: Limiting number of results per page.
        order: 15
      filterOld:
        kind: parameter
        group: filter
        label: consumer,filter
        type: boolean
        javaType: boolean
        deprecated: false
        secret: false
        defaultValue: true
        description: Filter out old tweets that has previously been polled. This state is stored in memory only and based on last tweet id.
        order: 16
      keywords:
        kind: parameter
        group: filter
        label: consumer,filter
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Can be used for search and streaming/filter. Multiple values can be separated with comma.
        order: 17
      lang:
        kind: parameter
        group: filter
        label: consumer,filter
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The lang string ISO_639-1 which will be used for searching
        order: 18
      numberOfPages:
        kind: parameter
        group: filter
        label: consumer,filter
        type: integer
        javaType: java.lang.Integer
        deprecated: false
        secret: false
        defaultValue: "1"
        description: The number of pages result which you want camel-twitter to consume.
        order: 19
      sinceId:
        kind: parameter
        group: filter
        label: consumer,filter
        type: integer
        javaType: long
        deprecated: false
        secret: false
        defaultValue: "1"
        description: The last tweet id which will be used for pulling the tweets. It is useful when the camel route is restarted after a long running.
        order: 20
      userIds:
        kind: parameter
        group: filter
        label: consumer,filter
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: To filter by user ids for streaming/filter. Multiple values can be separated by comma.
        order: 21
      backoffErrorThreshold:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: integer
        javaType: int
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        description: The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.
        order: 22
      backoffIdleThreshold:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: integer
        javaType: int
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        description: The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.
        order: 23
      backoffMultiplier:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: integer
        javaType: int
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        description: To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.
        order: 24
      delay:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: integer
        javaType: long
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: "60000"
        description: Milliseconds before the next poll.
        order: 25
      greedy:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: boolean
        javaType: boolean
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: false
        description: If greedy is enabled then the ScheduledPollConsumer will run immediately again if the previous run polled 1 or more messages.
        order: 26
      initialDelay:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: integer
        javaType: long
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: "1000"
        description: Milliseconds before the first poll starts. You can also specify time values using units such as 60s (60 seconds) 5m30s (5 minutes and 30 seconds) and 1h (1 hour).
        order: 27
      runLoggingLevel:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: string
        javaType: org.apache.camel.LoggingLevel
        enum:
        - TRACE
        - DEBUG
        - INFO
        - WARN
        - ERROR
        - OFF
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: TRACE
        description: The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.
        order: 28
      scheduledExecutorService:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: object
        javaType: java.util.concurrent.ScheduledExecutorService
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        description: Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.
        order: 29
      scheduler:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: string
        javaType: org.apache.camel.spi.ScheduledPollConsumerScheduler
        enum:
        - none
        - spring
        - quartz2
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: none
        description: To use a cron scheduler from either camel-spring or camel-quartz2 component
        order: 30
      schedulerProperties:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: object
        javaType: java.util.Map<java.lang.String,java.lang.Object>
        prefix: scheduler.
        multiValue: true
        deprecated: false
        secret: false
        description: To configure additional properties when using a custom scheduler or any of the Quartz2 Spring based scheduler.
        order: 31
      startScheduler:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: boolean
        javaType: boolean
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: true
        description: Whether the scheduler should be auto started.
        order: 32
      timeUnit:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: string
        javaType: java.util.concurrent.TimeUnit
        enum:
        - NANOSECONDS
        - MICROSECONDS
        - MILLISECONDS
        - SECONDS
        - MINUTES
        - HOURS
        - DAYS
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: MILLISECONDS
        description: Time unit for initialDelay and delay options.
        order: 33
      useFixedDelay:
        kind: parameter
        group: scheduler
        label: consumer,scheduler
        type: boolean
        javaType: boolean
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: true
        description: Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.
        order: 34
      httpProxyHost:
        kind: parameter
        group: proxy
        label: proxy
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The http proxy host which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.
        order: 35
      httpProxyPassword:
        kind: parameter
        group: proxy
        label: proxy
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The http proxy password which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.
        order: 36
      httpProxyPort:
        kind: parameter
        group: proxy
        label: proxy
        type: integer
        javaType: java.lang.Integer
        deprecated: false
        secret: false
        description: The http proxy port which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.
        order: 37
      httpProxyUser:
        kind: parameter
        group: proxy
        label: proxy
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The http proxy user which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.
        order: 38
      accessToken:
        kind: parameter
        group: security
        label: security
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: true
        description: The access token. Can also be configured on the TwitterComponent level instead.
        order: 39
      accessTokenSecret:
        kind: parameter
        group: security
        label: security
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: true
        description: The access secret. Can also be configured on the TwitterComponent level instead.
        order: 40
      consumerKey:
        kind: parameter
        group: security
        label: security
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: true
        description: The consumer key. Can also be configured on the TwitterComponent level instead.
        order: 41
      consumerSecret:
        kind: parameter
        group: security
        label: security
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: true
        description: The consumer secret. Can also be configured on the TwitterComponent level instead.
        order: 42
  documentation.adoc: |
    ifdef::env-github[]
    :caution-caption: :boom:
    :important-caption: :exclamation:
    :note-caption: :information_source:
    :tip-caption: :bulb:
    :warning-caption: :warning:
    endif::[]

    [[ConfluenceContent]]
    [[Twitter-Twitter]]
    Twitter
    ~~~~~~~

    *Available as of Camel 2.10*

    The Twitter component enables the most useful features of the Twitter
    API by encapsulating http://twitter4j.org/[Twitter4J]. It allows direct,
    polling, or event-driven consumption of timelines, users, trends, and
    direct messages. Also, it supports producing messages as status updates
    or direct messages.

    Twitter now requires the use of OAuth for all client application
    authentication. In order to use camel-twitter with your account, you'll
    need to create a new application within Twitter at
    https://dev.twitter.com/apps/new and grant the application access to
    your account. Finally, generate your access token and secret.

    Maven users will need to add the following dependency to their pom.xml
    for this component:

    [source,xml]
    ----
    <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-twitter</artifactId>
        <version>${camel-version}</version>
    </dependency>
    ----

    [[Twitter-URIformat]]
    URI format
    ^^^^^^^^^^

    [source]
    ----
    twitter://endpoint[?options]
    ----

    [[Twitter-TwitterComponent]]
    Twitter component
    ^^^^^^^^^^^^^^^^^

    The twitter component can be configured with the Twitter account
    settings which is mandatory to configure before using.





    // component options: START
    The Twitter component supports 8 options which are listed below.



    {% raw %}
    [width="100%",cols="2,1m,7",options="header"]
    |=======================================================================
    | Name | Java Type | Description
    | accessToken | String | The access token
    | accessTokenSecret | String | The access token secret
    | consumerKey | String | The consumer key
    | consumerSecret | String | The consumer secret
    | httpProxyHost | String | The http proxy host which can be used for the camel-twitter.
    | httpProxyUser | String | The http proxy user which can be used for the camel-twitter.
    | httpProxyPassword | String | The http proxy password which can be used for the camel-twitter.
    | httpProxyPort | int | The http proxy port which can be used for the camel-twitter.
    |=======================================================================
    {% endraw %}
    // component options: END





    You can also configure these options directly in the endpoint.

    [[Twitter-ConsumerEndpoints]]
    Consumer endpoints
    ^^^^^^^^^^^^^^^^^^

    Rather than the endpoints returning a List through one single route
    exchange, camel-twitter creates one route exchange per returned object.
    As an example, if "timeline/home" results in five statuses, the route
    will be executed five times (one for each Status).

    [width="100%",cols="10%,10%,10%,70%",options="header",]
    |=======================================================================
    |Endpoint |Context |Body Type |Notice
    |directmessage |direct, polling |twitter4j.DirectMessage | 

    |search |direct, polling |twitter4j.Status | 

    |streaming/filter |event, polling |twitter4j.Status | 

    |streaming/sample |event, polling |twitter4j.Status | 

    |streaming/user |event, polling |twitter4j.Status |**Camel 2.16**: To
    receive tweets from protected users and accounts.

    |timeline/home |direct, polling |twitter4j.Status | 

    |timeline/mentions |direct, polling |twitter4j.Status | 

    |[line-through]*timeline/public* |[line-through]*direct, polling*
    |[line-through]*twitter4j.Status* |[line-through]*@deprecated. Use
    timeline/home or direct/home instead. Removed from *Camel 2.11*
    onwards.*

    |timeline/retweetsofme |direct, polling |twitter4j.Status | 

    |timeline/user |direct, polling |twitter4j.Status | 

    |[line-through]*trends/daily* |[line-through]**Camel 2.10.1:* direct,
    polling* |[line-through]*twitter4j.Status* |[line-through]*@deprecated.
    Removed from Camel 2.11 onwards.*

    |[line-through]*trends/weekly* |[line-through]**Camel 2.10.1:* direct,
    polling* |[line-through]*twitter4j.Status* |[line-through]*@deprecated.
    Removed from Camel 2.11 onwards.*
    |=======================================================================

    [[Twitter-ProducerEndpoints]]
    Producer endpoints
    ^^^^^^^^^^^^^^^^^^

    [width="100%",cols="20%,80%",options="header",]
    |==============================
    |Endpoint |Body Type
    |directmessage |String
    |search |List<twitter4j.Status>
    |timeline/user |String
    |==============================

    [[Twitter-URIOptions]]
    URI options
    ^^^^^^^^^^^







    // endpoint options: START
    The Twitter component supports 43 endpoint options which are listed below:

    {% raw %}
    [width="100%",cols="2,1,1m,1m,5",options="header"]
    |=======================================================================
    | Name | Group | Default | Java Type | Description
    | kind | common |  | String | *Required* What polling mode to use direct polling or event based. The event mode is only supported when the endpoint kind is event based.
    | user | common |  | String | Username used for user timeline consumption direct message production etc.
    | bridgeErrorHandler | consumer | false | boolean | Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored.
    | sendEmptyMessageWhenIdle | consumer | false | boolean | If the polling consumer did not poll any files you can enable this option to send an empty message (no body) instead.
    | type | consumer | direct | EndpointType | Endpoint type to use. Only streaming supports event type.
    | distanceMetric | consumer (advanced) | km | String | Used by the non-stream geography search to search by radius using the configured metrics. The unit can either be mi for miles or km for kilometers. You need to configure all the following options: longitude latitude radius and distanceMetric.
    | exceptionHandler | consumer (advanced) |  | ExceptionHandler | To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored.
    | exchangePattern | consumer (advanced) |  | ExchangePattern | Sets the exchange pattern when the consumer creates an exchange.
    | latitude | consumer (advanced) |  | Double | Used by the non-stream geography search to search by latitude. You need to configure all the following options: longitude latitude radius and distanceMetric.
    | locations | consumer (advanced) |  | String | Bounding boxes created by pairs of lat/lons. Can be used for streaming/filter. A pair is defined as latlon. And multiple paris can be separated by semi colon.
    | longitude | consumer (advanced) |  | Double | Used by the non-stream geography search to search by longitude. You need to configure all the following options: longitude latitude radius and distanceMetric.
    | pollStrategy | consumer (advanced) |  | PollingConsumerPollStrategy | A pluggable org.apache.camel.PollingConsumerPollingStrategy allowing you to provide your custom implementation to control error handling usually occurred during the poll operation before an Exchange have been created and being routed in Camel.
    | radius | consumer (advanced) |  | Double | Used by the non-stream geography search to search by radius. You need to configure all the following options: longitude latitude radius and distanceMetric.
    | twitterStream | consumer (advanced) |  | TwitterStream | To use a custom instance of TwitterStream
    | synchronous | advanced | false | boolean | Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported).
    | count | filter |  | Integer | Limiting number of results per page.
    | filterOld | filter | true | boolean | Filter out old tweets that has previously been polled. This state is stored in memory only and based on last tweet id.
    | keywords | filter |  | String | Can be used for search and streaming/filter. Multiple values can be separated with comma.
    | lang | filter |  | String | The lang string ISO_639-1 which will be used for searching
    | numberOfPages | filter | 1 | Integer | The number of pages result which you want camel-twitter to consume.
    | sinceId | filter | 1 | long | The last tweet id which will be used for pulling the tweets. It is useful when the camel route is restarted after a long running.
    | userIds | filter |  | String | To filter by user ids for streaming/filter. Multiple values can be separated by comma.
    | backoffErrorThreshold | scheduler |  | int | The number of subsequent error polls (failed due some error) that should happen before the backoffMultipler should kick-in.
    | backoffIdleThreshold | scheduler |  | int | The number of subsequent idle polls that should happen before the backoffMultipler should kick-in.
    | backoffMultiplier | scheduler |  | int | To let the scheduled polling consumer backoff if there has been a number of subsequent idles/errors in a row. The multiplier is then the number of polls that will be skipped before the next actual attempt is happening again. When this option is in use then backoffIdleThreshold and/or backoffErrorThreshold must also be configured.
    | delay | scheduler | 60000 | long | Milliseconds before the next poll.
    | greedy | scheduler | false | boolean | If greedy is enabled then the ScheduledPollConsumer will run immediately again if the previous run polled 1 or more messages.
    | initialDelay | scheduler | 1000 | long | Milliseconds before the first poll starts. You can also specify time values using units such as 60s (60 seconds) 5m30s (5 minutes and 30 seconds) and 1h (1 hour).
    | runLoggingLevel | scheduler | TRACE | LoggingLevel | The consumer logs a start/complete log line when it polls. This option allows you to configure the logging level for that.
    | scheduledExecutorService | scheduler |  | ScheduledExecutorService | Allows for configuring a custom/shared thread pool to use for the consumer. By default each consumer has its own single threaded thread pool.
    | scheduler | scheduler | none | ScheduledPollConsumerScheduler | To use a cron scheduler from either camel-spring or camel-quartz2 component
    | schedulerProperties | scheduler |  | Map | To configure additional properties when using a custom scheduler or any of the Quartz2 Spring based scheduler.
    | startScheduler | scheduler | true | boolean | Whether the scheduler should be auto started.
    | timeUnit | scheduler | MILLISECONDS | TimeUnit | Time unit for initialDelay and delay options.
    | useFixedDelay | scheduler | true | boolean | Controls if fixed delay or fixed rate is used. See ScheduledExecutorService in JDK for details.
    | httpProxyHost | proxy |  | String | The http proxy host which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.
    | httpProxyPassword | proxy |  | String | The http proxy password which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.
    | httpProxyPort | proxy |  | Integer | The http proxy port which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.
    | httpProxyUser | proxy |  | String | The http proxy user which can be used for the camel-twitter. Can also be configured on the TwitterComponent level instead.
    | accessToken | security |  | String | The access token. Can also be configured on the TwitterComponent level instead.
    | accessTokenSecret | security |  | String | The access secret. Can also be configured on the TwitterComponent level instead.
    | consumerKey | security |  | String | The consumer key. Can also be configured on the TwitterComponent level instead.
    | consumerSecret | security |  | String | The consumer secret. Can also be configured on the TwitterComponent level instead.
    |=======================================================================
    {% endraw %}
    // endpoint options: END







    [[Twitter-Messageheaders]]
    Message headers
    ^^^^^^^^^^^^^^^

    [width="100%",cols="20%,80%",options="header",]
    |=======================================================================
    |Name |Description
    |`CamelTwitterKeywords` |This header is used by the search producer to
    change the search key words dynamically.

    |`CamelTwitterSearchLanguage` |*Camel 2.11.0:* This header can override
    the option of `lang` which set the search language for the search
    endpoint dynamically

    |`CamelTwitterCount` |*Camel 2.11.0* This header can override the option
    of `count` which sets the max twitters that will be returned.

    |`CamelTwitterNumberOfPages` |*Camel 2.11.0* This header can override
    the option of `numberOfPages` which sets how many pages we want to
    twitter returns.
    |=======================================================================

    [[Twitter-Messagebody]]
    Message body
    ^^^^^^^^^^^^

    All message bodies utilize objects provided by the Twitter4J API.

    [[Twitter-Usecases]]
    Use cases
    ^^^^^^^^^

    NOTE: *API Rate Limits:* Twitter REST APIs encapsulated by http://twitter4j.org/[Twitter4J] are
    subjected to https://dev.twitter.com/rest/public/rate-limiting[API Rate
    Limiting]. You can find the per method limits in the
    https://dev.twitter.com/rest/public/rate-limits[API Rate Limits]
    documentation. Note that endpoints/resources not listed in that page are
    default to 15 requests per allotted user per window.

    [[Twitter-TocreateastatusupdatewithinyourTwitterprofile,sendthisproduceraStringbody]]
    To create a status update within your Twitter profile, send this producer a String body:
    ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    [source,java]
    ----
    from("direct:foo")
      .to("twitter://timeline/user?consumerKey=[s]&consumerSecret=[s]&accessToken=[s]&accessTokenSecret=[s]);
    ----

    [[Twitter-Topoll,every60sec.,allstatusesonyourhometimeline]]
    To poll, every 60 sec., all statuses on your home timeline:
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    [source,java]
    ----
    from("twitter://timeline/home?type=polling&delay=60&consumerKey=[s]&consumerSecret=[s]&accessToken=[s]&accessTokenSecret=[s]")
      .to("bean:blah");
    ----

    [[Twitter-TosearchforallstatuseswiththekeywordCamel]]
    To search for all statuses with the keyword 'camel':
    ++++++++++++++++++++++++++++++++++++++++++++++++++++

    [source,java]
    ----
    from("twitter://search?type=direct&keywords=camel&consumerKey=[s]&consumerSecret=[s]&accessToken=[s]&accessTokenSecret=[s]")
      .to("bean:blah");
    ----

    [[Twitter-Searchingusingaproducerwithstatickeywords]]
    Searching using a producer with static keywords:
    ++++++++++++++++++++++++++++++++++++++++++++++++

    [source,java]
    ----
    from("direct:foo")
      .to("twitter://search?keywords=camel&consumerKey=[s]&consumerSecret=[s]&accessToken=[s]&accessTokenSecret=[s]");
    ----

    [[Twitter-Searchingusingaproducerwithdynamickeywordsfromheader]]
    Searching using a producer with dynamic keywords from header:
    +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

    In the `bar` header we have the keywords we want to search, so we can
    assign this value to the `CamelTwitterKeywords` header:

    [source,java]
    ----
    from("direct:foo")
      .setHeader("CamelTwitterKeywords", header("bar"))
      .to("twitter://search?consumerKey=[s]&consumerSecret=[s]&accessToken=[s]&accessTokenSecret=[s]");
    ----

    [[Twitter-Example]]
    Example
    ^^^^^^^

    See also the link:twitter-websocket-example.html[Twitter Websocket
    Example].

    [[Twitter-SeeAlso]]
    See Also
    ^^^^^^^^

    * link:configuring-camel.html[Configuring Camel]
    * link:component.html[Component]
    * link:endpoint.html[Endpoint]
    * link:getting-started.html[Getting Started]

    * link:twitter-websocket-example.html[Twitter Websocket Example]
  application.properties: |
    # NOTE these secrets are purely for demos!
    # please replace with your access token secrets for your apps!!!
    camel.component.twitter.access-token=26693234-W0YjxL9cMJrC0VZZ4xdgFMymxIQ10LeL1K8YlbBY
    camel.component.twitter.access-token-secret=BZD51BgzbOdFstWZYsqB5p5dbuuDV12vrOdatzhY4E
    camel.component.twitter.consumer-key=NMqaca1bzXsOcZhP2XlwA
    camel.component.twitter.consumer-secret=VxNQiRLwwKVD0K9mmfxlTTbVdgRpriORypnUbHhxeQw
