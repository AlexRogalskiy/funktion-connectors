---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    funktion.fabric8.io/kind: Connector
  name: vertx
data:
  deployment.yml: |
    ---
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      labels:
        funktion.fabric8.io/kind: Subscription
        connector: vertx
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            funktion.fabric8.io/kind: Subscription
            connector: vertx
        spec:
          containers:
          - image: funktion/connector-vertx:${project.version}
            name: connector
  schema.yml: |
    ---
    component:
      kind: component
      scheme: vertx
      syntax: vertx:address
      title: Vert.x
      description: The vertx component is used for sending and receive messages from a vertx event bus.
      label: eventbus
      deprecated: false
      async: true
      javaType: org.apache.camel.component.vertx.VertxComponent
      groupId: org.apache.camel
      artifactId: camel-vertx
      version: 2.18.3
    componentProperties:
      vertxFactory:
        kind: property
        type: object
        javaType: io.vertx.core.spi.VertxFactory
        deprecated: false
        secret: false
        description: To use a custom VertxFactory implementation
        order: 0
      host:
        kind: property
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Hostname for creating an embedded clustered EventBus
        order: 1
      port:
        kind: property
        type: integer
        javaType: int
        deprecated: false
        secret: false
        description: Port for creating an embedded clustered EventBus
        order: 2
      vertxOptions:
        kind: property
        type: object
        javaType: io.vertx.core.VertxOptions
        deprecated: false
        secret: false
        description: Options to use for creating vertx
        order: 3
      vertx:
        kind: property
        type: object
        javaType: io.vertx.core.Vertx
        deprecated: false
        secret: false
        description: To use the given vertx EventBus instead of creating a new embedded EventBus
        order: 4
      timeout:
        kind: property
        type: integer
        javaType: int
        deprecated: false
        secret: false
        description: Timeout in seconds to wait for clustered Vertx EventBus to be ready. The default value is 60.
        order: 5
    properties:
      address:
        kind: path
        group: common
        required: true
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Sets the event bus address used to communicate
        order: 0
      pubSub:
        kind: parameter
        group: common
        type: boolean
        javaType: java.lang.Boolean
        deprecated: false
        secret: false
        description: Whether to use publish/subscribe instead of point to point when sending to a vertx endpoint.
        order: 1
      bridgeErrorHandler:
        kind: parameter
        group: consumer
        label: consumer
        type: boolean
        javaType: boolean
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: false
        description: Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored.
        order: 2
      exceptionHandler:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: object
        javaType: org.apache.camel.spi.ExceptionHandler
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        description: To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored.
        order: 3
      exchangePattern:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: string
        javaType: org.apache.camel.ExchangePattern
        enum:
        - InOnly
        - RobustInOnly
        - InOut
        - InOptionalOut
        - OutOnly
        - RobustOutOnly
        - OutIn
        - OutOptionalIn
        deprecated: false
        secret: false
        description: Sets the exchange pattern when the consumer creates an exchange.
        order: 4
      synchronous:
        kind: parameter
        group: advanced
        label: advanced
        type: boolean
        javaType: boolean
        deprecated: false
        secret: false
        defaultValue: false
        description: Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported).
        order: 5
  documentation.adoc: |+
    [[Vertx-VertxComponent]]
    Vertx Component
    ~~~~~~~~~~~~~~~

    *Available as of Camel 2.12*

    The *vertx* component is for working with the http://vertx.io/[Vertx]
    http://vertx.io/core_manual_js.html#the-event-bus[EventBus].

    The vertx http://vertx.io/core_manual_js.html#the-event-bus[EventBus]
    sends and receives JSON events.

    INFO:From *Camel 2.16* onwards vertx 3 is in use which requires Java 1.8 at
    runtime.

    Maven users will need to add the following dependency to their `pom.xml`
    for this component:

    [source,xml]
    ------------------------------------------------------------
    <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-vertx</artifactId>
        <version>x.x.x</version>
        <!-- use the same version as your Camel core version -->
    </dependency>
    ------------------------------------------------------------

    [[Vertx-URIformat]]
    URI format
    ^^^^^^^^^^

    [source,java]
    ---------------------------
    vertx:channelName[?options]
    ---------------------------

    [[Vertx-Options]]
    Options
    ^^^^^^^



    // component options: START
    The Vert.x component supports 6 options which are listed below.



    {% raw %}
    [width="100%",cols="2,1m,7",options="header"]
    |=======================================================================
    | Name | Java Type | Description
    | vertxFactory | VertxFactory | To use a custom VertxFactory implementation
    | host | String | Hostname for creating an embedded clustered EventBus
    | port | int | Port for creating an embedded clustered EventBus
    | vertxOptions | VertxOptions | Options to use for creating vertx
    | vertx | Vertx | To use the given vertx EventBus instead of creating a new embedded EventBus
    | timeout | int | Timeout in seconds to wait for clustered Vertx EventBus to be ready. The default value is 60.
    |=======================================================================
    {% endraw %}
    // component options: END




    // endpoint options: START
    The Vert.x component supports 6 endpoint options which are listed below:

    {% raw %}
    [width="100%",cols="2,1,1m,1m,5",options="header"]
    |=======================================================================
    | Name | Group | Default | Java Type | Description
    | address | common |  | String | *Required* Sets the event bus address used to communicate
    | pubSub | common |  | Boolean | Whether to use publish/subscribe instead of point to point when sending to a vertx endpoint.
    | bridgeErrorHandler | consumer | false | boolean | Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored.
    | exceptionHandler | consumer (advanced) |  | ExceptionHandler | To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored.
    | exchangePattern | consumer (advanced) |  | ExchangePattern | Sets the exchange pattern when the consumer creates an exchange.
    | synchronous | advanced | false | boolean | Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported).
    |=======================================================================
    {% endraw %}
    // endpoint options: END


    *Camel 2.12.3:* Whether to use publish/subscribe instead of point to
    point when sending to a vertx endpoint.

    -----------------------------------------------------------------------------------------------
    You can append query options to the URI in the following format, ?option=value&option=value&...
    -----------------------------------------------------------------------------------------------

    [[Vertx-ConnectingtotheexistingVert.xinstance]]
    Connecting to the existing Vert.x instance
    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

    If you would like to connect to the Vert.x instance already existing in
    your JVM, you can set the instance on the component level:

    [source,java]
    -----------------------------------------------------
    Vertx vertx = ...;
    VertxComponent vertxComponent = new VertxComponent();
    vertxComponent.setVertx(vertx);
    camelContext.addComponent("vertx", vertxComponent);
    -----------------------------------------------------

    [[Vertx-SeeAlso]]
    See Also
    ^^^^^^^^

    * link:configuring-camel.html[Configuring Camel]
    * link:component.html[Component]
    * link:endpoint.html[Endpoint]
    * link:getting-started.html[Getting Started]

