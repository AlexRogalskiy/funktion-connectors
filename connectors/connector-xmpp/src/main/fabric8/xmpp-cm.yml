---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    funktion.fabric8.io/kind: Connector
  name: xmpp
data:
  deployment.yml: |
    ---
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      labels:
        funktion.fabric8.io/kind: Subscription
        connector: xmpp
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            funktion.fabric8.io/kind: Subscription
            connector: xmpp
        spec:
          containers:
          - image: funktion/connector-xmpp:${project.version}
            name: connector
  schema.yml: |
    ---
    component:
      kind: component
      scheme: xmpp
      syntax: xmpp:host:port/participant
      alternativeSyntax: xmpp:user:password@host:port/participant
      title: XMPP
      description: To send and receive messages from a XMPP (chat) server.
      label: chat,messaging
      deprecated: false
      async: false
      javaType: org.apache.camel.component.xmpp.XmppComponent
      groupId: org.apache.camel
      artifactId: camel-xmpp
      version: 2.18.3
    componentProperties: {}
    properties:
      host:
        kind: path
        group: common
        required: true
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Hostname for the chat server
        order: 0
      port:
        kind: path
        group: common
        required: true
        type: integer
        javaType: int
        deprecated: false
        secret: false
        description: Port number for the chat server
        order: 1
      participant:
        kind: path
        group: common
        label: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: JID (Jabber ID) of person to receive messages. room parameter has precedence over participant.
        order: 2
      login:
        kind: parameter
        group: common
        label: common
        type: boolean
        javaType: boolean
        deprecated: false
        secret: false
        defaultValue: true
        description: Whether to login the user.
        order: 3
      nickname:
        kind: parameter
        group: common
        label: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Use nickname when joining room. If room is specified and nickname is not user will be used for the nickname.
        order: 4
      pubsub:
        kind: parameter
        group: common
        label: common
        type: boolean
        javaType: boolean
        deprecated: false
        secret: false
        defaultValue: false
        description: Accept pubsub packets on input default is false
        order: 5
      room:
        kind: parameter
        group: common
        label: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: If this option is specified the component will connect to MUC (Multi User Chat). Usually the domain name for MUC is different from the login domain. For example if you are supermanjabber.org and want to join the krypton room then the room URL is kryptonconference.jabber.org. Note the conference part. It is not a requirement to provide the full room JID. If the room parameter does not contain the symbol the domain part will be discovered and added by Camel
        order: 6
      serviceName:
        kind: parameter
        group: common
        label: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The name of the service you are connecting to. For Google Talk this would be gmail.com.
        order: 7
      testConnectionOnStartup:
        kind: parameter
        group: common
        label: common
        type: boolean
        javaType: boolean
        deprecated: false
        secret: false
        defaultValue: true
        description: Specifies whether to test the connection on startup. This is used to ensure that the XMPP client has a valid connection to the XMPP server when the route starts. Camel throws an exception on startup if a connection cannot be established. When this option is set to false Camel will attempt to establish a lazy connection when needed by a producer and will poll for a consumer connection until the connection is established. Default is true.
        order: 8
      createAccount:
        kind: parameter
        group: common (advanced)
        label: common,advanced
        type: boolean
        javaType: boolean
        deprecated: false
        secret: false
        defaultValue: false
        description: If true an attempt to create an account will be made. Default is false.
        order: 9
      resource:
        kind: parameter
        group: common (advanced)
        label: common,advanced
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        defaultValue: Camel
        description: XMPP resource. The default is Camel.
        order: 10
      bridgeErrorHandler:
        kind: parameter
        group: consumer
        label: consumer
        type: boolean
        javaType: boolean
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: false
        description: Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored.
        order: 11
      connectionPollDelay:
        kind: parameter
        group: consumer
        label: consumer
        type: integer
        javaType: int
        deprecated: false
        secret: false
        defaultValue: "10"
        description: The amount of time in seconds between polls (in seconds) to verify the health of the XMPP connection or between attempts to establish an initial consumer connection. Camel will try to re-establish a connection if it has become inactive. Default is 10 seconds.
        order: 12
      doc:
        kind: parameter
        group: consumer
        label: consumer
        type: boolean
        javaType: boolean
        deprecated: false
        secret: false
        defaultValue: false
        description: Set a doc header on the IN message containing a Document form of the incoming packet; default is true if presence or pubsub are true otherwise false
        order: 13
      exceptionHandler:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: object
        javaType: org.apache.camel.spi.ExceptionHandler
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        description: To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored.
        order: 14
      exchangePattern:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: string
        javaType: org.apache.camel.ExchangePattern
        enum:
        - InOnly
        - RobustInOnly
        - InOut
        - InOptionalOut
        - OutOnly
        - RobustOutOnly
        - OutIn
        - OutOptionalIn
        deprecated: false
        secret: false
        description: Sets the exchange pattern when the consumer creates an exchange.
        order: 15
      connectionConfig:
        kind: parameter
        group: advanced
        label: advanced
        type: object
        javaType: org.jivesoftware.smack.ConnectionConfiguration
        deprecated: false
        secret: false
        description: To use an existing connection configuration
        order: 16
      synchronous:
        kind: parameter
        group: advanced
        label: advanced
        type: boolean
        javaType: boolean
        deprecated: false
        secret: false
        defaultValue: false
        description: Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported).
        order: 17
      headerFilterStrategy:
        kind: parameter
        group: filter
        label: filter
        type: object
        javaType: org.apache.camel.spi.HeaderFilterStrategy
        deprecated: false
        secret: false
        description: To use a custom HeaderFilterStrategy to filter header to and from Camel message.
        order: 18
      password:
        kind: parameter
        group: security
        label: security
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: true
        description: Password for login
        order: 19
      user:
        kind: parameter
        group: security
        label: security
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: true
        description: User name (without server name). If not specified anonymous login will be attempted.
        order: 20
  documentation.adoc: "[[XMPP-XMPPComponent]]\nXMPP Component\n~~~~~~~~~~~~~~\n\n\
    The *xmpp:* component implements an XMPP (Jabber) transport.\n\nMaven users will\
    \ need to add the following dependency to their `pom.xml`\nfor this component:\n\
    \n[source,xml]\n------------------------------------------------------------\n\
    <dependency>\n    <groupId>org.apache.camel</groupId>\n    <artifactId>camel-xmpp</artifactId>\n\
    \    <version>x.x.x</version>\n    <!-- use the same version as your Camel core\
    \ version -->\n</dependency>\n------------------------------------------------------------\n\
    \n[[XMPP-URIformat]]\nURI format\n^^^^^^^^^^\n\n[source,text]\n------------------------------------------------------\n\
    xmpp://[login@]hostname[:port][/participant][?Options]\n------------------------------------------------------\n\
    \nThe component supports both room based and private person-person\nconversations.\
    \ +\n The component supports both producer and consumer (you can get messages\n\
    from XMPP or send messages to XMPP). Consumer mode supports rooms\nstarting.\n\
    \nYou can append query options to the URI in the following format,\n`?option=value&option=value&...`\n\
    \n[[XMPP-Options]]\nOptions\n^^^^^^^\n\n\n// component options: START\nThe XMPP\
    \ component has no options.\n// component options: END\n\n\n\n// endpoint options:\
    \ START\nThe XMPP component supports 21 endpoint options which are listed below:\n\
    \n{% raw %}\n[width=\"100%\",cols=\"2,1,1m,1m,5\",options=\"header\"]\n|=======================================================================\n\
    | Name | Group | Default | Java Type | Description\n| host | common |  | String\
    \ | *Required* Hostname for the chat server\n| port | common |  | int | *Required*\
    \ Port number for the chat server\n| participant | common |  | String | JID (Jabber\
    \ ID) of person to receive messages. room parameter has precedence over participant.\n\
    | login | common | true | boolean | Whether to login the user.\n| nickname | common\
    \ |  | String | Use nickname when joining room. If room is specified and nickname\
    \ is not user will be used for the nickname.\n| pubsub | common | false | boolean\
    \ | Accept pubsub packets on input default is false\n| room | common |  | String\
    \ | If this option is specified the component will connect to MUC (Multi User\
    \ Chat). Usually the domain name for MUC is different from the login domain. For\
    \ example if you are supermanjabber.org and want to join the krypton room then\
    \ the room URL is kryptonconference.jabber.org. Note the conference part. It is\
    \ not a requirement to provide the full room JID. If the room parameter does not\
    \ contain the symbol the domain part will be discovered and added by Camel\n|\
    \ serviceName | common |  | String | The name of the service you are connecting\
    \ to. For Google Talk this would be gmail.com.\n| testConnectionOnStartup | common\
    \ | true | boolean | Specifies whether to test the connection on startup. This\
    \ is used to ensure that the XMPP client has a valid connection to the XMPP server\
    \ when the route starts. Camel throws an exception on startup if a connection\
    \ cannot be established. When this option is set to false Camel will attempt to\
    \ establish a lazy connection when needed by a producer and will poll for a consumer\
    \ connection until the connection is established. Default is true.\n| createAccount\
    \ | common (advanced) | false | boolean | If true an attempt to create an account\
    \ will be made. Default is false.\n| resource | common (advanced) | Camel | String\
    \ | XMPP resource. The default is Camel.\n| bridgeErrorHandler | consumer | false\
    \ | boolean | Allows for bridging the consumer to the Camel routing Error Handler\
    \ which mean any exceptions occurred while the consumer is trying to pickup incoming\
    \ messages or the likes will now be processed as a message and handled by the\
    \ routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler\
    \ to deal with exceptions that will be logged at WARN/ERROR level and ignored.\n\
    | connectionPollDelay | consumer | 10 | int | The amount of time in seconds between\
    \ polls (in seconds) to verify the health of the XMPP connection or between attempts\
    \ to establish an initial consumer connection. Camel will try to re-establish\
    \ a connection if it has become inactive. Default is 10 seconds.\n| doc | consumer\
    \ | false | boolean | Set a doc header on the IN message containing a Document\
    \ form of the incoming packet; default is true if presence or pubsub are true\
    \ otherwise false\n| exceptionHandler | consumer (advanced) |  | ExceptionHandler\
    \ | To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler\
    \ is enabled then this options is not in use. By default the consumer will deal\
    \ with exceptions that will be logged at WARN/ERROR level and ignored.\n| exchangePattern\
    \ | consumer (advanced) |  | ExchangePattern | Sets the exchange pattern when\
    \ the consumer creates an exchange.\n| connectionConfig | advanced |  | ConnectionConfiguration\
    \ | To use an existing connection configuration\n| synchronous | advanced | false\
    \ | boolean | Sets whether synchronous processing should be strictly used or Camel\
    \ is allowed to use asynchronous processing (if supported).\n| headerFilterStrategy\
    \ | filter |  | HeaderFilterStrategy | To use a custom HeaderFilterStrategy to\
    \ filter header to and from Camel message.\n| password | security |  | String\
    \ | Password for login\n| user | security |  | String | User name (without server\
    \ name). If not specified anonymous login will be attempted.\n|=======================================================================\n\
    {% endraw %}\n// endpoint options: END\n\n\n[[XMPP-HeadersandsettingSubjectorLanguage]]\n\
    Headers and setting Subject or Language\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \nCamel sets the message IN headers as properties on the XMPP message. You\ncan\
    \ configure a `HeaderFilterStategy` if you need custom filtering of\nheaders.\
    \ \nThe *Subject* and *Language* of the XMPP message are also set if they\nare\
    \ provided as IN headers.\n\n[[XMPP-Examples]]\nExamples\n^^^^^^^^\n\nUser `superman`\
    \ to join room `krypton` at `jabber` server with password,\n`secret`:\n\n[source,text]\n\
    ------------------------------------------------------------------------------\n\
    xmpp://superman@jabber.org/?room=krypton@conference.jabber.org&password=secret\n\
    ------------------------------------------------------------------------------\n\
    \nUser `superman` to send messages to `joker`:\n\n[source,text]\n-----------------------------------------------------------\n\
    xmpp://superman@jabber.org/joker@jabber.org?password=secret\n-----------------------------------------------------------\n\
    \nRouting example in Java:\n\n[source,java]\n------------------------------------------------------------------\n\
    from(\"timer://kickoff?period=10000\").\nsetBody(constant(\"I will win!\\n Your\
    \ Superman.\")).\nto(\"xmpp://superman@jabber.org/joker@jabber.org?password=secret\"\
    );\n------------------------------------------------------------------\n\nConsumer\
    \ configuration, which writes all messages from `joker` into the\nqueue, `evil.talk`.\n\
    \n[source,java]\n--------------------------------------------------------------------\n\
    from(\"xmpp://superman@jabber.org/joker@jabber.org?password=secret\").\nto(\"\
    activemq:evil.talk\");\n--------------------------------------------------------------------\n\
    \nConsumer configuration, which listens to room messages:\n\n[source,java]\n---------------------------------------------------------------------------------------\n\
    from(\"xmpp://superman@jabber.org/?password=secret&room=krypton@conference.jabber.org\"\
    ).\nto(\"activemq:krypton.talk\");\n---------------------------------------------------------------------------------------\n\
    \nRoom in short notation (no domain part):\n\n[source,java]\n-----------------------------------------------------------------\n\
    from(\"xmpp://superman@jabber.org/?password=secret&room=krypton\").\nto(\"activemq:krypton.talk\"\
    );\n-----------------------------------------------------------------\n\nWhen\
    \ connecting to the Google Chat service, you'll need to specify the\n`serviceName`\
    \ as well as your credentials:\n\n[source,java]\n---------------------------------------------------------------------------------------------------------\n\
    from(\"direct:start\").\n  to(\"xmpp://talk.google.com:5222/touser@gmail.com?serviceName=gmail.com&user=fromuser&password=secret\"\
    ).\n  to(\"mock:result\");\n---------------------------------------------------------------------------------------------------------\n\
    \n\_\n\n[[XMPP-SeeAlso]]\nSee Also\n^^^^^^^^\n\n* link:configuring-camel.html[Configuring\
    \ Camel]\n* link:component.html[Component]\n* link:endpoint.html[Endpoint]\n*\
    \ link:getting-started.html[Getting Started]\n\n"
