---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    funktion.fabric8.io/kind: Connector
  name: google-calendar
data:
  deployment.yml: |
    ---
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      labels:
        funktion.fabric8.io/kind: Subscription
        connector: google-calendar
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            funktion.fabric8.io/kind: Subscription
            connector: google-calendar
        spec:
          containers:
          - image: funktion/connector-google-calendar:${project.version}
            name: connector
  schema.yml: |
    ---
    component:
      kind: component
      scheme: google-calendar
      syntax: google-calendar:apiName/methodName
      title: Google Calendar
      description: The google-calendar component provides access to Google Calendar.
      label: api,cloud
      deprecated: false
      async: false
      javaType: org.apache.camel.component.google.calendar.GoogleCalendarComponent
      groupId: org.apache.camel
      artifactId: camel-google-calendar
      version: 2.18.3
    componentProperties:
      configuration:
        kind: property
        type: object
        javaType: org.apache.camel.component.google.calendar.GoogleCalendarConfiguration
        deprecated: false
        secret: false
        description: To use the shared configuration
        order: 0
      clientFactory:
        kind: property
        type: object
        javaType: org.apache.camel.component.google.calendar.GoogleCalendarClientFactory
        deprecated: false
        secret: false
        description: To use the GoogleCalendarClientFactory as factory for creating the client. Will by default use BatchGoogleCalendarClientFactory
        order: 1
    properties:
      apiName:
        kind: path
        group: common
        required: true
        type: string
        javaType: org.apache.camel.component.google.calendar.internal.GoogleCalendarApiName
        enum:
        - ACL
        - LIST
        - CALENDARS
        - CHANNELS
        - COLORS
        - FREEBUSY
        - EVENTS
        - SETTINGS
        deprecated: false
        secret: false
        description: What kind of operation to perform
        order: 0
      methodName:
        kind: path
        group: common
        required: true
        type: string
        javaType: java.lang.String
        enum:
        - calendarImport
        - clear
        - delete
        - get
        - insert
        - instances
        - list
        - move
        - patch
        - query
        - quickAdd
        - stop
        - update
        - watch
        deprecated: false
        secret: false
        description: What sub operation to use for the selected operation
        order: 1
      accessToken:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: OAuth 2 access token. This typically expires after an hour so refreshToken is recommended for long term usage.
        order: 2
      applicationName:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Google calendar application name. Example would be camel-google-calendar/1.0
        order: 3
      clientId:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Client ID of the calendar application
        order: 4
      clientSecret:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Client secret of the calendar application
        order: 5
      emailAddress:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The emailAddress of the Google Service Account.
        order: 6
      inBody:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Sets the name of a parameter to be passed in the exchange In Body
        order: 7
      p12FileName:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The name of the p12 file which has the private key to use with the Google Service Account.
        order: 8
      refreshToken:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: OAuth 2 refresh token. Using this the Google Calendar component can obtain a new accessToken whenever the current one expires - a necessity if the application is long-lived.
        order: 9
      scopes:
        kind: parameter
        group: common
        type: array
        javaType: java.util.List<java.lang.String>
        deprecated: false
        secret: false
        defaultValue: https://www.googleapis.com/auth/calendar
        description: Specifies the level of permissions you want a calendar application to have to a user account. See https://developers.google.com/google-apps/calendar/auth for more info.
        order: 10
      user:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The email address of the user the application is trying to impersonate in the service account flow
        order: 11
      bridgeErrorHandler:
        kind: parameter
        group: consumer
        label: consumer
        type: boolean
        javaType: boolean
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: false
        description: Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored.
        order: 12
      exceptionHandler:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: object
        javaType: org.apache.camel.spi.ExceptionHandler
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        description: To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored.
        order: 13
      exchangePattern:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: string
        javaType: org.apache.camel.ExchangePattern
        enum:
        - InOnly
        - RobustInOnly
        - InOut
        - InOptionalOut
        - OutOnly
        - RobustOutOnly
        - OutIn
        - OutOptionalIn
        deprecated: false
        secret: false
        description: Sets the exchange pattern when the consumer creates an exchange.
        order: 14
      synchronous:
        kind: parameter
        group: advanced
        label: advanced
        type: boolean
        javaType: boolean
        deprecated: false
        secret: false
        defaultValue: false
        description: Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported).
        order: 15
  documentation.adoc: "[[GoogleCalendar-GoogleCalendarComponent]]\nGoogleCalendar\
    \ Component\n~~~~~~~~~~~~~~~~~~~~~~~~\n\n*Available as of Camel 2.15*\n\n[[GoogleCalendar-ComponentDescription]]\n\
    Component Description\n^^^^^^^^^^^^^^^^^^^^^\n\nThe Google Calendar component\
    \ provides access\nto\_http://google.com/calendar[Google Calendar]\_via\nthe\_\
    https://developers.google.com/google-apps/calendar/v3/reference/[Google\nCalendar\
    \ Web APIs].\n\nGoogle Calendar uses\nthe\_https://developers.google.com/accounts/docs/OAuth2[OAuth\
    \ 2.0\nprotocol]\_for authenticating a Google account and authorizing access to\n\
    user data. Before you can use this component, you will need\nto\_https://developers.google.com/google-apps/calendar/auth[create\
    \ an\naccount and generate OAuth credentials]. Credentials comprise of a\nclientId,\
    \ clientSecret, and a refreshToken. A handy resource for\ngenerating a long-lived\_\
    refreshToken is\nthe\_https://developers.google.com/oauthplayground[OAuth playground].\n\
    \nMaven users will need to add the following dependency to their pom.xml\nfor\
    \ this component:\n\n----------------------------------------------------------\n\
    \    <dependency>\n            <groupId>org.apache.camel</groupId>\n         \
    \   <artifactId>camel-google-calendar</artifactId>\n            <version>2.15.0</version>\n\
    \    </dependency>\n        \n----------------------------------------------------------\n\
    \n[[GoogleCalendar-options]]\n1. Google Calendar Options\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\
    \n\n\n\n// component options: START\nThe Google Calendar component supports 2\
    \ options which are listed below.\n\n\n\n{% raw %}\n[width=\"100%\",cols=\"2,1m,7\"\
    ,options=\"header\"]\n|=======================================================================\n\
    | Name | Java Type | Description\n| configuration | GoogleCalendarConfiguration\
    \ | To use the shared configuration\n| clientFactory | GoogleCalendarClientFactory\
    \ | To use the GoogleCalendarClientFactory as factory for creating the client.\
    \ Will by default use BatchGoogleCalendarClientFactory\n|=======================================================================\n\
    {% endraw %}\n// component options: END\n\n\n\n\n\n\n\n\n// endpoint options:\
    \ START\nThe Google Calendar component supports 16 endpoint options which are\
    \ listed below:\n\n{% raw %}\n[width=\"100%\",cols=\"2,1,1m,1m,5\",options=\"\
    header\"]\n|=======================================================================\n\
    | Name | Group | Default | Java Type | Description\n| apiName | common |  | GoogleCalendarApiName\
    \ | *Required* What kind of operation to perform\n| methodName | common |  | String\
    \ | *Required* What sub operation to use for the selected operation\n| accessToken\
    \ | common |  | String | OAuth 2 access token. This typically expires after an\
    \ hour so refreshToken is recommended for long term usage.\n| applicationName\
    \ | common |  | String | Google calendar application name. Example would be camel-google-calendar/1.0\n\
    | clientId | common |  | String | Client ID of the calendar application\n| clientSecret\
    \ | common |  | String | Client secret of the calendar application\n| emailAddress\
    \ | common |  | String | The emailAddress of the Google Service Account.\n| inBody\
    \ | common |  | String | Sets the name of a parameter to be passed in the exchange\
    \ In Body\n| p12FileName | common |  | String | The name of the p12 file which\
    \ has the private key to use with the Google Service Account.\n| refreshToken\
    \ | common |  | String | OAuth 2 refresh token. Using this the Google Calendar\
    \ component can obtain a new accessToken whenever the current one expires - a\
    \ necessity if the application is long-lived.\n| scopes | common | https://www.googleapis.com/auth/calendar\
    \ | List | Specifies the level of permissions you want a calendar application\
    \ to have to a user account. See https://developers.google.com/google-apps/calendar/auth\
    \ for more info.\n| user | common |  | String | The email address of the user\
    \ the application is trying to impersonate in the service account flow\n| bridgeErrorHandler\
    \ | consumer | false | boolean | Allows for bridging the consumer to the Camel\
    \ routing Error Handler which mean any exceptions occurred while the consumer\
    \ is trying to pickup incoming messages or the likes will now be processed as\
    \ a message and handled by the routing Error Handler. By default the consumer\
    \ will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that\
    \ will be logged at WARN/ERROR level and ignored.\n| exceptionHandler | consumer\
    \ (advanced) |  | ExceptionHandler | To let the consumer use a custom ExceptionHandler.\
    \ Notice if the option bridgeErrorHandler is enabled then this options is not\
    \ in use. By default the consumer will deal with exceptions that will be logged\
    \ at WARN/ERROR level and ignored.\n| exchangePattern | consumer (advanced) |\
    \  | ExchangePattern | Sets the exchange pattern when the consumer creates an\
    \ exchange.\n| synchronous | advanced | false | boolean | Sets whether synchronous\
    \ processing should be strictly used or Camel is allowed to use asynchronous processing\
    \ (if supported).\n|=======================================================================\n\
    {% endraw %}\n// endpoint options: END\n\n\n[[GoogleCalendar-URIFormat]]\nURI\
    \ Format\n^^^^^^^^^^\n\nThe GoogleCalendar Component uses the following URI format:\n\
    \n------------------------------------------------------------\n        google-calendar://endpoint-prefix/endpoint?[options]\n\
    \    \n------------------------------------------------------------\n\nEndpoint\
    \ prefix can be one of:\n\n* acl\n* calendars\n* channels\n* colors\n* events\n\
    * freebusy\n* list\n* settings\n\n[[GoogleCalendar-ProducerEndpoints]]\nProducer\
    \ Endpoints\n^^^^^^^^^^^^^^^^^^\n\nProducer endpoints can use endpoint prefixes\
    \ followed by endpoint names\nand associated options described next. A shorthand\
    \ alias can be used for\nsome endpoints. The endpoint URI MUST contain a prefix.\n\
    \nEndpoint options that are not mandatory are denoted by []. When there\nare no\
    \ mandatory options for an endpoint, one of the set of [] options\nMUST be provided.\
    \ Producer endpoints can also use a special option\n*`inBody`* that in turn should\
    \ contain the name of the endpoint option\nwhose value will be contained in the\
    \ Camel Exchange In message.\n\nAny of the endpoint options can be provided in\
    \ either the endpoint URI,\nor dynamically in a message header. The message header\
    \ name must be of\nthe format `CamelGoogleCalendar.<option>`. Note that the `inBody`\
    \ option\noverrides message header, i.e. the endpoint option `inBody=option` would\n\
    override a `CamelGoogleCalendar.option` header.\n\n\n[[GoogleCalendar-ConsumerEndpoints]]\n\
    Consumer Endpoints\n^^^^^^^^^^^^^^^^^^\n\nAny of the producer endpoints can be\
    \ used as a consumer endpoint.\nConsumer endpoints can use\nhttp://camel.apache.org/polling-consumer.html#PollingConsumer-ScheduledPollConsumerOptions[Scheduled\n\
    Poll Consumer Options] with a `consumer.` prefix to schedule endpoint\ninvocation.\
    \ Consumer endpoints that return an array or collection will\ngenerate one exchange\
    \ per element, and their routes will be executed\nonce for each exchange.\n\n\
    [[GoogleCalendar-MessageHeaders]]\nMessage Headers\n^^^^^^^^^^^^^^^\n\nAny URI\
    \ option can be provided in a message header for producer\nendpoints with a `CamelGoogleCalendar.`\
    \ prefix.\n\n[[GoogleCalendar-MessageBody]]\nMessage Body\n^^^^^^^^^^^^\n\nAll\
    \ result message bodies utilize objects provided by the underlying\nAPIs used\
    \ by the GoogleCalendarComponent. Producer endpoints can specify\nthe option name\
    \ for incoming message body in the `inBody` endpoint URI\nparameter. For endpoints\
    \ that return an array or collection, a consumer\nendpoint will map every element\
    \ to distinct messages. \_ \_\_\n"
