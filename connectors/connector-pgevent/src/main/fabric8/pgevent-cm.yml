---
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    funktion.fabric8.io/kind: Connector
  name: pgevent
data:
  deployment.yml: |
    ---
    apiVersion: extensions/v1beta1
    kind: Deployment
    metadata:
      labels:
        funktion.fabric8.io/kind: Subscription
        connector: pgevent
    spec:
      replicas: 1
      template:
        metadata:
          labels:
            funktion.fabric8.io/kind: Subscription
            connector: pgevent
        spec:
          containers:
          - image: funktion/connector-pgevent:${project.version}
            name: connector
  schema.yml: |
    ---
    component:
      kind: component
      scheme: pgevent
      syntax: pgevent:host:port/database/channel
      title: PostgresSQL Event
      description: The pgevent component allows for producing/consuming PostgreSQL events related to the LISTEN/NOTIFY commands.
      label: database,sql
      deprecated: false
      async: false
      javaType: org.apache.camel.component.pgevent.PgEventComponent
      groupId: org.apache.camel
      artifactId: camel-pgevent
      version: 2.18.3
    componentProperties: {}
    properties:
      host:
        kind: path
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        defaultValue: localhost
        description: To connect using hostname and port to the database.
        order: 0
      port:
        kind: path
        group: common
        type: integer
        javaType: java.lang.Integer
        deprecated: false
        secret: false
        defaultValue: "5432"
        description: To connect using hostname and port to the database.
        order: 1
      database:
        kind: path
        group: common
        required: true
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The database name
        order: 2
      channel:
        kind: path
        group: common
        required: true
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: The channel name
        order: 3
      datasource:
        kind: parameter
        group: common
        type: object
        javaType: javax.sql.DataSource
        deprecated: false
        secret: false
        description: To connect using the given javax.sql.DataSource instead of using hostname and port.
        order: 4
      pass:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        description: Password for login
        order: 5
      user:
        kind: parameter
        group: common
        type: string
        javaType: java.lang.String
        deprecated: false
        secret: false
        defaultValue: postgres
        description: Username for login
        order: 6
      bridgeErrorHandler:
        kind: parameter
        group: consumer
        label: consumer
        type: boolean
        javaType: boolean
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        defaultValue: false
        description: Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored.
        order: 7
      exceptionHandler:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: object
        javaType: org.apache.camel.spi.ExceptionHandler
        optionalPrefix: consumer.
        deprecated: false
        secret: false
        description: To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored.
        order: 8
      exchangePattern:
        kind: parameter
        group: consumer (advanced)
        label: consumer,advanced
        type: string
        javaType: org.apache.camel.ExchangePattern
        enum:
        - InOnly
        - RobustInOnly
        - InOut
        - InOptionalOut
        - OutOnly
        - RobustOutOnly
        - OutIn
        - OutOptionalIn
        deprecated: false
        secret: false
        description: Sets the exchange pattern when the consumer creates an exchange.
        order: 9
      synchronous:
        kind: parameter
        group: advanced
        label: advanced
        type: boolean
        javaType: boolean
        deprecated: false
        secret: false
        defaultValue: false
        description: Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported).
        order: 10
  documentation.adoc: |+
    [[PGEvent-PGEventComponentPostgresSQLEvent]]
    PGEvent Component (PostgresSQL Event)
    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    This is a component for Apache Camel which allows for
    Producing/Consuming PostgreSQL events related to the LISTEN/NOTIFY
    commands added since PostgreSQL 8.3.

    Maven users will need to add the following dependency to their `pom.xml`
    for this component:

    [source,xml]
    ------------------------------------------------------------
    <dependency>
        <groupId>org.apache.camel</groupId>
        <artifactId>camel-pgevent</artifactId>
        <version>x.x.x</version>
        <!-- use the same version as your Camel core version -->
    </dependency>
    ------------------------------------------------------------

    URI format

    The pgevent component uses the following two styles of endpoint URI
    notation:

    [source,java]
    -------------------------------------------------
    pgevent:datasource[?parameters]
    pgevent://host:port/database/channel[?parameters]
    -------------------------------------------------

    You can append query options to the URI in the following format,
    `?option=value&option=value&...`

    [[PGEvent-Options]]
    Options
    ^^^^^^^


    // component options: START
    The PostgresSQL Event component has no options.
    // component options: END



    // endpoint options: START
    The PostgresSQL Event component supports 11 endpoint options which are listed below:

    {% raw %}
    [width="100%",cols="2,1,1m,1m,5",options="header"]
    |=======================================================================
    | Name | Group | Default | Java Type | Description
    | host | common | localhost | String | To connect using hostname and port to the database.
    | port | common | 5432 | Integer | To connect using hostname and port to the database.
    | database | common |  | String | *Required* The database name
    | channel | common |  | String | *Required* The channel name
    | datasource | common |  | DataSource | To connect using the given javax.sql.DataSource instead of using hostname and port.
    | pass | common |  | String | Password for login
    | user | common | postgres | String | Username for login
    | bridgeErrorHandler | consumer | false | boolean | Allows for bridging the consumer to the Camel routing Error Handler which mean any exceptions occurred while the consumer is trying to pickup incoming messages or the likes will now be processed as a message and handled by the routing Error Handler. By default the consumer will use the org.apache.camel.spi.ExceptionHandler to deal with exceptions that will be logged at WARN/ERROR level and ignored.
    | exceptionHandler | consumer (advanced) |  | ExceptionHandler | To let the consumer use a custom ExceptionHandler. Notice if the option bridgeErrorHandler is enabled then this options is not in use. By default the consumer will deal with exceptions that will be logged at WARN/ERROR level and ignored.
    | exchangePattern | consumer (advanced) |  | ExchangePattern | Sets the exchange pattern when the consumer creates an exchange.
    | synchronous | advanced | false | boolean | Sets whether synchronous processing should be strictly used or Camel is allowed to use asynchronous processing (if supported).
    |=======================================================================
    {% endraw %}
    // endpoint options: END


    [[PGEvent-SeeAlso]]
    See Also
    ^^^^^^^^

    * link:configuring-camel.html[Configuring Camel]
    * link:component.html[Component]
    * link:endpoint.html[Endpoint]
    * link:getting-started.html[Getting Started]

